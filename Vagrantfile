# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  #################################################
  ###    ADD YOUR CUSTOM CONFIGURATION BELOW    ###
  #################################################
  
  
  # Name of the virtual machine
  # default: "registryboxkit"
  vmname = "registryboxkit"
  
  # Base url the bibbox kit (should match puppet config file)
  # default: "registryboxkit.bibbox.org"
  bibboxbaseurl = "registryboxkit.bibbox.org"
  
  # Number of assigned CPU cores
  # default: 4
  cpus = 4
  
  # Total amount of memory in MB (RAM)
  # default: "8192" (8GB)
  memory = "8192"
  
  # Amount of additional disk space in MB (hard drive)
  # default: 301 * 1024 (301GB)
  disksize = 301 * 1024
  
  # Name of the disk
  # default "301GB"
  diskname = "301GB"

  # Static IP and port within the host's network
  # ip default: "192.168.10.10"
  # http_port default: 1080
  ip = "192.168.10.10"
  http_port = 1080
  # https_port = XXXX
  
  # Ports used for SSH connection
  # ssh_vagrant_port is only for Vagrant internally
  # default: 2230
  # ssh_port is used to connect from outside
  # default: 2231
  ssh_vagrant_port = 2230
  ssh_port = 2231
  
  
  #################################################
  ###        END OF CUSTOM CONFIGURATION        ###
  #################################################
  
  
  # - # - # - # - # - # - # - # - # - # - # - # - #
  
  
  #################################################
  ###  DO NOT EDIT THIS FILE BEYOND THIS POINT  ###
  #################################################
  
  
  # OS image of the virtual machine
  config.vm.box = "puppetlabs/ubuntu-14.04-64-puppet"

  # Static IP and port within the host's network
  config.vm.network :private_network, ip: ip
  config.vm.network :forwarded_port, host: http_port,  guest: 80
  
  # Port forwarding for SSH
  config.vm.network :forwarded_port, guest: 22, host: ssh_vagrant_port, id: "ssh", disabled: true
  config.vm.network :forwarded_port, guest: 22, host: ssh_port, auto_correct: true

  # Start of provisioning
  config.vm.provider "virtualbox" do |vb|
  
    # Enable multiple CPUs and set RAM and CPUs of VM
    vb.customize ["modifyvm", vmname, "--ioapic", "on"  ]
    vb.memory = memory
    vb.cpus = cpus
    
    # Create new disk of size 301GB
    file_to_disk = File.realpath( "." ).to_s + "/disk-" + diskname + ".vdi"

        if ARGV[0] == "up" && ! File.exist?(file_to_disk) 
           puts "Creating " + diskname + " disk #{file_to_disk}."
           vb.customize [
                'createhd', 
                '--filename', file_to_disk, 
                '--format', 'VDI', 
                '--size', disksize
                ] 
           vb.customize [
                'storageattach', vmname, 
                '--storagectl', 'IDE Controller', 
                '--port', 1, '--device', 0, 
                '--type', 'hdd', '--medium', 
                file_to_disk
                ]
        end

    vb.name = vmname
  end

  # Provision the VM with several puppet modules, add additional disk space enable bash for ssh and download Liferay if it doesn't exist yet
  config.vm.provision "shell", inline: <<-SHELL
    sudo sed -ie 's#SHELL=/bin/sh#SHELL=/bin/bash#g' /etc/default/useradd
    sudo bash /vagrant/resources/add_disk.sh
    sudo cp /vagrant/resources/liferay /etc/logrotate.d/
    mkdir -p /etc/puppetlabs/code/modules
    cp -r /vagrant/modules/* /etc/puppetlabs/code/modules
    if [ ! -f "/opt/liferay-ce-portal-tomcat-7.0-ga3.zip" ]; then
      echo "Downloading Liferay, this might take a while...";
      wget -nc -nv -P /opt/ "http://downloads.bibbox.org/liferay-ce-portal-tomcat-7.0-ga3.zip";
    else
      echo "Liferay sources already exist. Skipping download.";
    fi
    puppet module install puppetlabs-stdlib --version 4.14.0 --modulepath /etc/puppetlabs/code/modules
    puppet module install puppetlabs-apt --version 2.3.0 --modulepath /etc/puppetlabs/code/modules
    puppet module install puppetlabs-ntp --version 6.0.0 --modulepath /etc/puppetlabs/code/modules
    puppet module install puppetlabs-firewall --version 1.8.1 --modulepath /etc/puppetlabs/code/modules
    puppet module install puppetlabs-apache --version 1.11.0 --modulepath /etc/puppetlabs/code/modules
    puppet module install puppet-archive --version 1.2.0 --modulepath /etc/puppetlabs/code/modules
    puppet module install puppetlabs-vcsrepo --version 1.5.0 --modulepath /etc/puppetlabs/code/modules
    puppet module install puppet-alternatives --version 1.0.2 --modulepath /etc/puppetlabs/code/modules
    puppet module install puppetlabs-docker_platform --version 2.1.0 --modulepath /etc/puppetlabs/code/modules
    puppet module install puppetlabs-postgresql --version 4.8.0 --modulepath /etc/puppetlabs/code/modules
    puppet module install tylerwalts-jdk_oracle --version 1.5.0 --modulepath /etc/puppetlabs/code/modules
    sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 7F438280EF8D349F
    sudo apt-get update
    sudo apt-get install -y inotify-tools
    sudo apt-get install -y python3-pip
  SHELL

  config.vm.provision "puppet" do |puppet|
    puppet.facter = {
      "fqdn" => bibboxbaseurl
    }

    puppet.environment = "production"
    puppet.environment_path = "environments"
  end

  # To avoid the Warning: Could not retrieve fact fqdn
  config.vm.hostname = bibboxbaseurl

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end
end
